ubuntu server setup link===== https://www.digitalocean.com/community/tutorials/how-to-install-linux-nginx-mysql-php-lemp-stack-on-ubuntu-20-04


nginx install in ubuntu ==========


==>sudo apt update
==>sudo apt install nginx
<======check ufw list===>
==>sudo ufw app list

<=======================mysql install ===============================>


==>sudo apt install mysql-server
==>sudo mysql_secure_installation




======= mysql password reset======
https://www.tecmint.com/fix-mysql-error-1819-hy000/#:~:text=To%20resolve%20the%20MySQL%20ERROR,the%20password%20validation%20policy%20level.

https://www.digitalocean.com/community/tutorials/how-to-reset-your-mysql-or-mariadb-root-password-on-ubuntu-20-04?utm_medium=affiliates&utm_source=impact&utm_campaign=357605&utm_content=97660149169c47df9d0fd1f0e5ccc9ea&irgwc=1&irclickid=S1Oy34XdoxyIWg0SSzTcvSG8UkDQ2%3ARgDRSnxI0


==>
mysql --version
sudo systemctl stop mysql

sudo mysql -u root

sudo systemctl edit mysql

service===>
[Service]
ExecStart=
ExecStart=/usr/sbin/mysqld --skip-grant-tables --skip-networking

sudo systemctl daemon-reload
sudo systemctl start mysql



====variable show after change=====
sudo mysql -u root

mysql> SHOW VARIABLES LIKE 'validate_password%';

mysql> SET GLOBAL validate_password_policy=LOW;
or
mysql> SET GLOBAL validate_password_policy=0;

lenth set==> 
mysql> SET GLOBAL validate_password.length = 4;
mysql> SET GLOBAL validate_password.policy=LOW;


mysql>FLUSH PRIVILEGES;
mysql>ALTER USER 'root'@'localhost' IDENTIFIED WITH caching_sha2_password BY 'new_password';


For MySQL, remove the modified systemd configuration:

sudo systemctl revert mysql

sudo systemctl daemon-reload

sudo systemctl restart mysql

mysql -u root -p

SHOW DATABASES;

table use====>
USE playground;

CREATE DATABASE playground;
<==================exmple test server=================>

https://www.digitalocean.com/community/tutorials/how-to-set-up-nginx-server-blocks-virtual-hosts-on-ubuntu-16-04?utm_medium=affiliates&utm_source=impact&utm_campaign=357605&utm_content=97660149169c47df9d0fd1f0e5ccc9ea&irgwc=1&irclickid=S1Oy34XdoxyIWg0SSzTcvSG8UkDQykXoDRSnxI0

<=========laravel file isntall=============>

https://www.digitalocean.com/community/tutorials/how-to-deploy-a-laravel-application-with-nginx-on-ubuntu-16-04?utm_medium=affiliates&utm_source=impact&utm_campaign=357605&utm_content=97660149169c47df9d0fd1f0e5ccc9ea&irgwc=1&irclickid=S1Oy34XdoxyIWg0SSzTcvSG8UkDQzjwgDRSnxI0


<===========firewall status active======>

sudo ufw enable


Command may disrupt existing ssh connections. Proceed with operation (y|n)?

Firewall is active and enabled on system startup


 sudo ufw status =======check

Status: active

To                         Action      From
--                         ------      ----
Nginx HTTP                 ALLOW       Anywhere
Nginx HTTP (v6)            ALLOW       Anywhere (v6)





sudo ufw disable
Firewall stopped and disabled on system startup

ssh open server install for remote connection ====

sudo apt update

sudo apt install openssh-server
sudo systemctl status ssh 
sudo ufw allow ssh

ssh -v
=================php version change=================
sudo apt-get install php7.3-fpm
sudo systemctl status php7.3-fpm

sudo update-alternatives --set php /usr/bin/php7.0
sudo update-alternatives --set phar /usr/bin/phar7.0
sudo update-alternatives --set phar.phar /usr/bin/phar.phar7.0



<===========write permission command==============>

sudo chown -R www-data:www-data /var/www/satkhira/diqcare_1.0.local/apps/cache



<==========software file upload and setup command=============>

sudo mkdir -p /var/www/html/quickstart

sudo chown sammy:sammy /var/www/html/quickstart

cd /var/www/html/quickstart
git clone https://github.com/laravel/quickstart-basic .

composer install

sudo nano /var/www/html/quickstart/.env


sudo mv ~/travellist /var/www/travellist

sudo chgrp -R www-data storage bootstrap/cache

sudo chmod -R ug+rwx storage bootstrap/cache

sudo chown -R www-data.www-data /var/www/travellist/storage
sudo chown -R www-data.www-data /var/www/travellist/bootstrap/cache

<=================site setup===========>

sudo cp /etc/nginx/sites-available/default /etc/nginx/sites-available/example.com
sudo nano /etc/nginx/sites-available/example.com

sudo ln -s /etc/nginx/sites-available/example.com /etc/nginx/sites-enabled/

sudo systemctl reload nginx
sudo nginx -t

sudo systemctl restart nginx


<===============my sql database import ==========>

mysql -u root -p

CREATE DATABASE new_database;

mysql -u username -p new_database < data-dump.sql

<==============cron job laravel scheduler=========>

crontab -e

 sudo service cron restart
systemctl status cron


php file upload limit
sudo nano /etc/php/7.4/fpm/php.ini


nginx max body size change

sudo nano /etc/nginx/nginx.conf 



<===========mysql all file remove============>

sudo systemctl stop mysql
sudo systemctl status mysql
sudo apt-get purge mysql-server mysql-client mysql-common mysql-server-core-* mysql-client-core-*
sudo rm -rf /etc/mysql /var/lib/mysql
sudo apt autoremove
sudo apt autoclean

sudo apt install mysql-server



<===============mysql command==============>
SELECT user,host FROM mysql.user;

SELECT * FROM mysql.user;

SELECT current_user();

SELECT user,host, command FROM information_schema.processlist;
SELECT user, account_locked, password_expired FROM mysql.user;

SELECT DISTINCT user FROM mysql.user;


https://www.digitalocean.com/community/tutorials/how-to-create-a-new-user-and-grant-permissions-in-mysql




<==============php =========>

sudo add-apt-repository ppa:ondrej/php
sudo apt-get update
sudo systemctl status php7.4-fpm


 sudo apt install php7.4-fpm php7.14 libapache2-mod-php7.4 php7.4-common php7.4-mysql php7.4-xml php7.4-xmlrpc php7.4-curl php7.4-gd php7.4-imagick php7.4-cli php7.4-imap php7.4-mbstring php7.4-opcache php7.4-soap php7.4-zip php7.4-intl php7.4-bcmath unzip -y




<============dpkg error============>

sudo mv /var/lib/dpkg/info /var/lib/dpkg/info_silent
sudo mkdir /var/lib/dpkg/info
sudo apt-get update
sudo apt-get -f install
sudo mv /var/lib/dpkg/info/* /var/lib/dpkg/info_silent
sudo rm -rf /var/lib/dpkg/info
sudo mv /var/lib/dpkg/info_silent /var/lib/dpkg/info

==========phpmyadmin setup=========>
https://idroot.us/install-phpmyadmin-with-nginx-ubuntu-22-04/


<================php.ini modify==========>

Find:
  post_max_size = 8M
  upload_max_filesize = 2M
  max_execution_time = 30
  max_input_time = 60
  memory_limit = 8M

Change to:
  post_max_size = 750M
  upload_max_filesize = 750M
  max_execution_time = 5000
  max_input_time = 5000
  memory_limit = 1000M


sudo service php-fpm start <- start it
sudo service php-fpm stop <- stop it
sudo service php-fpm restart <- restart it
sudo service php-fpm reload <- reload it
